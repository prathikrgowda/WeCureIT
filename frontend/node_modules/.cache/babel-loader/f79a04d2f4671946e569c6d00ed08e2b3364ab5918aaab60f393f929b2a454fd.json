{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/adminDashboard/DoctorList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Make sure axios is installed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorsList() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    // Fetch the list of doctors from the backend and limit to 5\n    const fetchDoctors = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/doctors'); // Adjust the path if needed\n        const limitedDoctors = response.data.slice(0, 5); // Get only the first 5 doctors\n        setDoctors(limitedDoctors);\n      } catch (error) {\n        console.error(\"Error fetching doctors:\", error);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col mt-0 bg-white border rounded-lg p-4 w-[500px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"sr-only\",\n      children: \"Doctors List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-gray-900\",\n        children: \"Doctors List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"flex flex-col w-full border-t\",\n      children: doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-center py-3 w-full border-b\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-700\",\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorsList, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = DoctorsList;\nexport default DoctorsList;\nvar _c;\n$RefreshReg$(_c, \"DoctorsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DoctorsList","_s","doctors","setDoctors","fetchDoctors","response","get","limitedDoctors","data","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","index","name","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/adminDashboard/DoctorList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';  // Make sure axios is installed\n\nfunction DoctorsList() {\n  const [doctors, setDoctors] = useState([]);\n\n  useEffect(() => {\n    // Fetch the list of doctors from the backend and limit to 5\n    const fetchDoctors = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/doctors');  // Adjust the path if needed\n        const limitedDoctors = response.data.slice(0, 5); // Get only the first 5 doctors\n        setDoctors(limitedDoctors);\n      } catch (error) {\n        console.error(\"Error fetching doctors:\", error);\n      }\n    };\n    fetchDoctors();\n  }, []);\n\n  return (\n    <section className=\"flex flex-col mt-0 bg-white border rounded-lg p-4 w-[500px]\">\n      <h3 className=\"sr-only\">Doctors List</h3>    \n\n      {/* Header */}\n      <div className=\"mb-4\">\n        <h3 className=\"text-lg font-medium text-gray-900\">Doctors List</h3>\n      </div>\n      \n      {/* Doctors list */}\n      <ul className=\"flex flex-col w-full border-t\">\n        {doctors.map((doctor, index) => (\n          <li key={index} className=\"flex items-center py-3 w-full border-b\">\n            <div className=\"text-gray-700\">{doctor.name}</div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default DoctorsList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAE;QACxE,MAAMC,cAAc,GAAGF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClDN,UAAU,CAACI,cAAc,CAAC;MAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAASa,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAC9Ed,OAAA;MAAIa,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGzClB,OAAA;MAAKa,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBd,OAAA;QAAIa,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eAGNlB,OAAA;MAAIa,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAC1CX,OAAO,CAACgB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBrB,OAAA;QAAgBa,SAAS,EAAC,wCAAwC;QAAAC,QAAA,eAChEd,OAAA;UAAKa,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEM,MAAM,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC,GAD3CG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd;AAAChB,EAAA,CApCQD,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAsCpB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}