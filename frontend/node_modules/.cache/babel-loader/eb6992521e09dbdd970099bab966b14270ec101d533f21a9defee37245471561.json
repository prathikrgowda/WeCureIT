{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/ManageDoctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport Modal from '../components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageDoctors() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isDiscardModalOpen, setIsDiscardModalOpen] = useState(false);\n  const [shouldRefreshGrid, setShouldRefreshGrid] = useState(false); // New state to trigger grid refresh\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n\n  // Function to open the modal for adding a new doctor\n  const handleAddDoctor = () => {\n    setSelectedDoctor(null); // Clear any selected doctor for adding\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null);\n  };\n\n  // Function to save the doctor data\n  const handleSaveDoctor = doctorData => {\n    if (!selectedDoctor) {\n      // Notify DoctorGrid to refresh on new doctor addition\n      setShouldRefreshGrid(true);\n    }\n    handleCloseModal();\n  };\n\n  // Function to reset the grid refresh state after update\n  const resetGridRefresh = () => setShouldRefreshGrid(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 px-8 py-4 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[700px] max-w-[1000px]\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddDoctor,\n              className: \"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-full\",\n              children: \"Add Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[900px] max-w-[1200px]\",\n            children: /*#__PURE__*/_jsxDEV(DoctorGrid, {\n              onEdit: handleEditDoctor,\n              shouldRefresh: shouldRefreshGrid,\n              onRefreshComplete: resetGridRefresh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(AddDoctorForm, {\n        doctor: selectedDoctor,\n        onSave: handleSaveDoctor,\n        onCancel: handleCloseModal,\n        onDoctorAdded: () => setShouldRefreshGrid(true) // Trigger grid refresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isDiscardModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-md shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"Are you sure you want to discard the unsaved changes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded-md\",\n            onClick: () => setIsDiscardModalOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-md\",\n            onClick: () => {\n              setIsDiscardModalOpen(false);\n              handleCloseModal();\n            },\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageDoctors, \"JLXY+FWSgJFivwcT8DRTdfHsMno=\");\n_c = ManageDoctors;\nexport default ManageDoctors;\nvar _c;\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"names":["React","useState","AddDoctorForm","DoctorGrid","Header","Sidebar","Modal","jsxDEV","_jsxDEV","ManageDoctors","_s","isModalOpen","setIsModalOpen","selectedDoctor","setSelectedDoctor","isDiscardModalOpen","setIsDiscardModalOpen","shouldRefreshGrid","setShouldRefreshGrid","handleEditDoctor","doctor","handleAddDoctor","handleCloseModal","handleSaveDoctor","doctorData","resetGridRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEdit","shouldRefresh","onRefreshComplete","isOpen","onClose","onSave","onCancel","onDoctorAdded","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/ManageDoctors.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport Modal from '../components/Modal'; \n\nfunction ManageDoctors() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null); \n  const [isDiscardModalOpen, setIsDiscardModalOpen] = useState(false);\n  const [shouldRefreshGrid, setShouldRefreshGrid] = useState(false); // New state to trigger grid refresh\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true); \n  };\n\n  // Function to open the modal for adding a new doctor\n  const handleAddDoctor = () => {\n    setSelectedDoctor(null); // Clear any selected doctor for adding\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false); \n    setSelectedDoctor(null); \n  };\n\n  // Function to save the doctor data\n  const handleSaveDoctor = (doctorData) => {\n    if (!selectedDoctor) {\n      // Notify DoctorGrid to refresh on new doctor addition\n      setShouldRefreshGrid(true);\n    }\n    handleCloseModal();\n  };\n\n  // Function to reset the grid refresh state after update\n  const resetGridRefresh = () => setShouldRefreshGrid(false);\n\n  return (\n    <div className=\"flex-1 flex flex-col min-h-screen\">\n      <Header />\n      <div className=\"flex w-full min-h-screen bg-gray-50\">\n        <Sidebar className=\"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\" />\n        <main className=\"flex-1 px-8 py-4 w-full\">\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"min-w-[700px] max-w-[1000px]\">\n              {/* Button to open Add Doctor Form modal */}\n              <button \n                onClick={handleAddDoctor}\n                className=\"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-full\"\n              >\n                Add Doctor\n              </button>\n            </div>\n            <div className=\"min-w-[900px] max-w-[1200px]\">\n              <DoctorGrid onEdit={handleEditDoctor} shouldRefresh={shouldRefreshGrid} onRefreshComplete={resetGridRefresh} /> \n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modal for AddDoctorForm */}\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        <AddDoctorForm\n          doctor={selectedDoctor} \n          onSave={handleSaveDoctor}\n          onCancel={handleCloseModal} \n          onDoctorAdded={() => setShouldRefreshGrid(true)} // Trigger grid refresh\n        />\n      </Modal>\n\n      {/* Discard Confirmation Modal */}\n      {isDiscardModalOpen && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\">\n          <div className=\"bg-white p-6 rounded-md shadow-lg\">\n            <p className=\"mb-4\">Are you sure you want to discard the unsaved changes?</p>\n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded-md\"\n                onClick={() => setIsDiscardModalOpen(false)}\n              >\n                Close\n              </button>\n              <button\n                className=\"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-md\"\n                onClick={() => {\n                  setIsDiscardModalOpen(false);\n                  handleCloseModal();\n                }}\n              >\n                Confirm\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ManageDoctors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}