{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/DoctorGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DoctorCard from './DoctorCard';\nimport AddDoctorForm from './AddDoctorForm';\nimport Modal from '../components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorGrid() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch doctors from the backend\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/doctors');\n      setDoctors(response.data);\n    } catch (error) {\n      console.error(\"Error fetching doctors:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n  const handleEdit = doctor => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null);\n  };\n  const handleSaveDoctor = async updatedDoctor => {\n    try {\n      if (selectedDoctor) {\n        // Update existing doctor\n        await axios.put(`http://localhost:4000/api/doctors/${selectedDoctor._id}`, updatedDoctor);\n      } else {\n        // Add new doctor\n        await axios.post('http://localhost:4000/api/doctors', updatedDoctor);\n      }\n      await fetchDoctors(); // Refresh the doctor list\n    } catch (error) {\n      console.error(\"Error saving doctor:\", error);\n    } finally {\n      setIsModalOpen(false);\n    }\n  };\n  const handleRemoveDoctor = async doctorId => {\n    try {\n      await axios.delete(`http://localhost:4000/api/doctors/${doctorId}`);\n      await fetchDoctors(); // Refresh the doctor list after deletion\n    } catch (error) {\n      console.error(\"Error removing doctor:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-medium mb-6\",\n      children: \"All Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-6\",\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n        name: doctor.name,\n        specialty: doctor.specialty.join(', '),\n        onEdit: () => handleEdit(doctor),\n        onRemove: () => handleRemoveDoctor(doctor._id)\n      }, doctor._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(AddDoctorForm, {\n        doctor: selectedDoctor,\n        onSave: handleSaveDoctor,\n        onCancel: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorGrid, \"Td6ZQFFj/0byyWvKpuVBexdztaA=\");\n_c = DoctorGrid;\nexport default DoctorGrid;\nvar _c;\n$RefreshReg$(_c, \"DoctorGrid\");","map":{"version":3,"names":["React","useState","useEffect","axios","DoctorCard","AddDoctorForm","Modal","jsxDEV","_jsxDEV","DoctorGrid","_s","doctors","setDoctors","selectedDoctor","setSelectedDoctor","isModalOpen","setIsModalOpen","fetchDoctors","response","get","data","error","console","handleEdit","doctor","handleCloseModal","handleSaveDoctor","updatedDoctor","put","_id","post","handleRemoveDoctor","doctorId","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","specialty","join","onEdit","onRemove","isOpen","onClose","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/DoctorGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DoctorCard from './DoctorCard';\nimport AddDoctorForm from './AddDoctorForm';\nimport Modal from '../components/Modal';\n\nfunction DoctorGrid() {\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch doctors from the backend\n  const fetchDoctors = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/doctors');\n      setDoctors(response.data);\n    } catch (error) {\n      console.error(\"Error fetching doctors:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n\n  const handleEdit = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null);\n  };\n\n  const handleSaveDoctor = async (updatedDoctor) => {\n    try {\n      if (selectedDoctor) {\n        // Update existing doctor\n        await axios.put(`http://localhost:4000/api/doctors/${selectedDoctor._id}`, updatedDoctor);\n      } else {\n        // Add new doctor\n        await axios.post('http://localhost:4000/api/doctors', updatedDoctor);\n      }\n      await fetchDoctors(); // Refresh the doctor list\n    } catch (error) {\n      console.error(\"Error saving doctor:\", error);\n    } finally {\n      setIsModalOpen(false);\n    }\n  };\n\n  const handleRemoveDoctor = async (doctorId) => {\n    try {\n      await axios.delete(`http://localhost:4000/api/doctors/${doctorId}`);\n      await fetchDoctors(); // Refresh the doctor list after deletion\n    } catch (error) {\n      console.error(\"Error removing doctor:\", error);\n    }\n  };\n\n  return (\n    <section className=\"mt-8\">\n      <h3 className=\"text-xl font-medium mb-6\">All Doctors</h3>\n      <div className=\"grid grid-cols-4 gap-6\">\n        {doctors.map((doctor) => (\n          <DoctorCard\n            key={doctor._id}\n            name={doctor.name}\n            specialty={doctor.specialty.join(', ')}\n            onEdit={() => handleEdit(doctor)}\n            onRemove={() => handleRemoveDoctor(doctor._id)}\n          />\n        ))}\n      </div>\n\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n          <AddDoctorForm\n            doctor={selectedDoctor}\n            onSave={handleSaveDoctor}\n            onCancel={handleCloseModal}\n          />\n        </Modal>\n      )}\n    </section>\n  );\n}\n\nexport default DoctorGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}