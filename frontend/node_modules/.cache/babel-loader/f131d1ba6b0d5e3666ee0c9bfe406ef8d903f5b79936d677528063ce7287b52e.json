{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageDoctors() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [isDiscardModalOpen, setIsDiscardModalOpen] = useState(false);\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n\n  // Function to close the edit modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null);\n  };\n\n  // Function to save the doctor data\n  const handleSaveDoctor = doctorData => {\n    if (selectedDoctor) {\n      console.log('Edited Doctor:', doctorData);\n    } else {\n      console.log('New Doctor:', doctorData);\n    }\n    handleCloseModal();\n  };\n\n  // Show discard changes confirmation\n  const handleDiscardChanges = () => {\n    setIsModalOpen(true);\n  };\n\n  // Confirm discard changes and close both modals\n  const handleConfirmDiscard = () => {\n    setIsDiscardModalOpen(false); // Close discard confirmation modal\n    handleCloseModal(); // Close the main doctor form modal\n  };\n\n  // Close the discard confirmation modal\n  const handleCloseDiscardModal = () => {\n    setIsDiscardModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col bg-white border rounded-lg p-8 w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-md\",\n        onClick: handleSave,\n        children: doctor ? 'Save Changes' : 'Add Doctor'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), doctor && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"px-4 py-2 bg-red-500 hover:bg-red-800 text-white rounded-md\",\n        onClick: handleDiscardChanges,\n        children: \"Discard Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageDoctors, \"eCnTODkRlQEKrvT9NoayCn0g2i4=\");\n_c = ManageDoctors;\nexport default ManageDoctors;\nvar _c;\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"names":["React","useState","AddDoctorForm","DoctorGrid","Header","Sidebar","Modal","jsxDEV","_jsxDEV","ManageDoctors","_s","isModalOpen","setIsModalOpen","selectedDoctor","setSelectedDoctor","isDiscardModalOpen","setIsDiscardModalOpen","handleEditDoctor","doctor","handleCloseModal","handleSaveDoctor","doctorData","console","log","handleDiscardChanges","handleConfirmDiscard","handleCloseDiscardModal","className","children","type","onClick","handleSave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; \n\nfunction ManageDoctors() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null); \n  const [isDiscardModalOpen, setIsDiscardModalOpen] = useState(false);\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true); \n  };\n\n  // Function to close the edit modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false); \n    setSelectedDoctor(null); \n  };\n\n  // Function to save the doctor data\n  const handleSaveDoctor = (doctorData) => {\n    if (selectedDoctor) {\n      console.log('Edited Doctor:', doctorData);\n    } else {\n      console.log('New Doctor:', doctorData);\n    }\n    handleCloseModal(); \n  };\n\n  // Show discard changes confirmation\n  const handleDiscardChanges = () => {\n    setIsModalOpen(true); \n  };\n\n  // Confirm discard changes and close both modals\n  const handleConfirmDiscard = () => {\n    setIsDiscardModalOpen(false); // Close discard confirmation modal\n    handleCloseModal(); // Close the main doctor form modal\n  };\n\n  // Close the discard confirmation modal\n  const handleCloseDiscardModal = () => {\n    setIsDiscardModalOpen(false);\n  };\n\n  return (\n    <section className=\"flex flex-col bg-white border rounded-lg p-8 w-full\">\n      {/* ... existing form JSX ... */}\n      <div className=\"flex gap-3\">\n        <button\n          type=\"button\"\n          className=\"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-md\"\n          onClick={handleSave}\n        >\n          {doctor ? 'Save Changes' : 'Add Doctor'}\n        </button>\n        {doctor && (\n          <button\n            type=\"button\"\n            className=\"px-4 py-2 bg-red-500 hover:bg-red-800 text-white rounded-md\"\n            onClick={handleDiscardChanges}\n          >\n            Discard Changes\n          </button>\n        )}\n      </div>\n    </section>\n  );\n}\n\n\nexport default ManageDoctors;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEnE;EACA,MAAMgB,gBAAgB,GAAIC,MAAM,IAAK;IACnCJ,iBAAiB,CAACI,MAAM,CAAC;IACzBN,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,cAAc,CAAC,KAAK,CAAC;IACrBE,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMM,gBAAgB,GAAIC,UAAU,IAAK;IACvC,IAAIR,cAAc,EAAE;MAClBS,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,UAAU,CAAC;IAC3C,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,UAAU,CAAC;IACxC;IACAF,gBAAgB,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;IACjCZ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;IACjCT,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9BG,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMO,uBAAuB,GAAGA,CAAA,KAAM;IACpCV,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACER,OAAA;IAASmB,SAAS,EAAC,qDAAqD;IAAAC,QAAA,eAEtEpB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBpB,OAAA;QACEqB,IAAI,EAAC,QAAQ;QACbF,SAAS,EAAC,mEAAmE;QAC7EG,OAAO,EAAEC,UAAW;QAAAH,QAAA,EAEnBV,MAAM,GAAG,cAAc,GAAG;MAAY;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACRjB,MAAM,iBACLV,OAAA;QACEqB,IAAI,EAAC,QAAQ;QACbF,SAAS,EAAC,6DAA6D;QACvEG,OAAO,EAAEN,oBAAqB;QAAAI,QAAA,EAC/B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACzB,EAAA,CAlEQD,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAqEtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}