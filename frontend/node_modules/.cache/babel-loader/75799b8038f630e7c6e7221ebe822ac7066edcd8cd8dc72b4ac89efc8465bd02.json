{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/AddDoctorForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddDoctorForm({\n  doctor,\n  onSave,\n  onCancel\n}) {\n  _s();\n  const [doctorName, setDoctorName] = useState(\"\");\n  const [selectedSpecialties, setSelectedSpecialties] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [specialtiesOptions, setSpecialtiesOptions] = useState([]);\n  useEffect(() => {\n    const fetchSpecialties = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/specializations');\n        setSpecialtiesOptions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching specializations:\", error);\n      }\n    };\n    fetchSpecialties();\n    if (doctor) {\n      setDoctorName(doctor.name);\n      setSelectedSpecialties(doctor.specialty || []);\n      setEmail(doctor.email || \"\");\n      setDegree(doctor.degree || \"\");\n      setPassword(\"\");\n      setExperience(doctor.experience || \"\");\n    } else {\n      resetForm();\n    }\n  }, [doctor]);\n  const resetForm = () => {\n    setDoctorName(\"\");\n    setSelectedSpecialties([]);\n    setEmail(\"\");\n    setDegree(\"\");\n    setPassword(\"\");\n    setExperience(\"\");\n    setErrors({});\n  };\n  const handleSpecialtyChange = event => {\n    const selectedValue = event.target.value;\n    if (!selectedSpecialties.includes(selectedValue)) {\n      setSelectedSpecialties([...selectedSpecialties, selectedValue]);\n    }\n    event.target.value = \"\";\n  };\n  const removeSpecialty = specialty => {\n    setSelectedSpecialties(selectedSpecialties.filter(item => item !== specialty));\n  };\n  const handleSave = () => {\n    const validationErrors = {};\n    if (!doctorName) validationErrors.doctorName = \"Doctor's name is required\";\n    if (selectedSpecialties.length === 0) validationErrors.specialties = \"At least one specialty is required\";\n    if (!email) validationErrors.email = \"Email is required\";\n    if (!degree) validationErrors.degree = \"Degree is required\";\n    if (!password && !doctor) validationErrors.password = \"Password is required\";\n    if (!experience) validationErrors.experience = \"Experience is required\";\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const doctorData = {\n      name: doctorName,\n      specialty: selectedSpecialties,\n      email,\n      degree,\n      password: doctor ? undefined : password,\n      // Only save password if creating new\n      experience\n    };\n    onSave(doctorData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col bg-white border rounded-lg p-8 w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"px-4 py-2 bg-indigo-500 text-white rounded-full\",\n        children: doctor ? 'Save Changes' : 'Add Doctor'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        className: \"px-4 py-2 bg-red-500 text-white rounded-full\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(AddDoctorForm, \"VyPzqa2a7C57IotvywSpFQ6oHy0=\");\n_c = AddDoctorForm;\nexport default AddDoctorForm;\nvar _c;\n$RefreshReg$(_c, \"AddDoctorForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AddDoctorForm","doctor","onSave","onCancel","_s","doctorName","setDoctorName","selectedSpecialties","setSelectedSpecialties","email","setEmail","degree","setDegree","password","setPassword","experience","setExperience","errors","setErrors","specialtiesOptions","setSpecialtiesOptions","fetchSpecialties","response","get","data","error","console","name","specialty","resetForm","handleSpecialtyChange","event","selectedValue","target","value","includes","removeSpecialty","filter","item","handleSave","validationErrors","length","specialties","Object","keys","doctorData","undefined","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/AddDoctorForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction AddDoctorForm({ doctor, onSave, onCancel }) {\n  const [doctorName, setDoctorName] = useState(\"\");\n  const [selectedSpecialties, setSelectedSpecialties] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [specialtiesOptions, setSpecialtiesOptions] = useState([]);\n\n  useEffect(() => {\n    const fetchSpecialties = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/specializations');\n        setSpecialtiesOptions(response.data);\n      } catch (error) {\n        console.error(\"Error fetching specializations:\", error);\n      }\n    };\n\n    fetchSpecialties();\n\n    if (doctor) {\n      setDoctorName(doctor.name);\n      setSelectedSpecialties(doctor.specialty || []);\n      setEmail(doctor.email || \"\");\n      setDegree(doctor.degree || \"\");\n      setPassword(\"\");\n      setExperience(doctor.experience || \"\");\n    } else {\n      resetForm();\n    }\n  }, [doctor]);\n\n  const resetForm = () => {\n    setDoctorName(\"\");\n    setSelectedSpecialties([]);\n    setEmail(\"\");\n    setDegree(\"\");\n    setPassword(\"\");\n    setExperience(\"\");\n    setErrors({});\n  };\n\n  const handleSpecialtyChange = (event) => {\n    const selectedValue = event.target.value;\n    if (!selectedSpecialties.includes(selectedValue)) {\n      setSelectedSpecialties([...selectedSpecialties, selectedValue]);\n    }\n    event.target.value = \"\";\n  };\n\n  const removeSpecialty = (specialty) => {\n    setSelectedSpecialties(selectedSpecialties.filter((item) => item !== specialty));\n  };\n\n  const handleSave = () => {\n    const validationErrors = {};\n    if (!doctorName) validationErrors.doctorName = \"Doctor's name is required\";\n    if (selectedSpecialties.length === 0) validationErrors.specialties = \"At least one specialty is required\";\n    if (!email) validationErrors.email = \"Email is required\";\n    if (!degree) validationErrors.degree = \"Degree is required\";\n    if (!password && !doctor) validationErrors.password = \"Password is required\";\n    if (!experience) validationErrors.experience = \"Experience is required\";\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    const doctorData = {\n      name: doctorName,\n      specialty: selectedSpecialties,\n      email,\n      degree,\n      password: doctor ? undefined : password, // Only save password if creating new\n      experience,\n    };\n\n    onSave(doctorData);\n  };\n\n  return (\n    <section className=\"flex flex-col bg-white border rounded-lg p-8 w-full\">\n      {/* Form for adding or editing doctor */}\n      {/* (Code here for rendering inputs as shown in previous examples) */}\n      \n      <div className=\"flex gap-3\">\n        <button onClick={handleSave} className=\"px-4 py-2 bg-indigo-500 text-white rounded-full\">\n          {doctor ? 'Save Changes' : 'Add Doctor'}\n        </button>\n        <button onClick={onCancel} className=\"px-4 py-2 bg-red-500 text-white rounded-full\">\n          Cancel\n        </button>\n      </div>\n    </section>\n  );\n}\n\nexport default AddDoctorForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}