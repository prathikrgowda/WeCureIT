{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/AddDoctorForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddDoctorForm({\n  doctor,\n  onSave,\n  onCancel,\n  isEditMode = false\n}) {\n  _s();\n  const [doctorName, setDoctorName] = useState(\"\");\n  const [selectedSpecialties, setSelectedSpecialties] = useState([]);\n  const [specialtiesOptions, setSpecialtiesOptions] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [isDiscardModalOpen, setIsDiscardModalOpen] = useState(false);\n  const [errors, setErrors] = useState({}); // State to track form errors\n\n  useEffect(() => {\n    // Fetch the list of specializations from the backend\n    const fetchSpecialties = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/specializations');\n        setSpecialtiesOptions(response.data); // Assuming response.data is an array of specialization names\n      } catch (error) {\n        console.error(\"Error fetching specializations:\", error);\n      }\n    };\n    fetchSpecialties();\n    if (doctor) {\n      // Load doctor data for edit mode\n      setDoctorName(doctor.name);\n      setSelectedSpecialties(doctor.specialty || []);\n      setEmail(doctor.email || \"\");\n      setDegree(doctor.degree || \"\");\n      setPassword(\"\");\n      setExperience(doctor.experience || \"\");\n    } else {\n      // Reset form for add mode\n      resetForm();\n    }\n  }, [doctor]);\n  const resetForm = () => {\n    setDoctorName(\"\");\n    setSelectedSpecialties([]);\n    setEmail(\"\");\n    setDegree(\"\");\n    setPassword(\"\");\n    setExperience(\"\");\n  };\n  const handleSpecialtyChange = event => {\n    const selectedValue = event.target.value;\n    if (!selectedSpecialties.includes(selectedValue)) {\n      setSelectedSpecialties([...selectedSpecialties, selectedValue]);\n    }\n    event.target.value = \"\"; // Reset dropdown after selection\n  };\n  const removeSpecialty = specialty => {\n    setSelectedSpecialties(selectedSpecialties.filter(item => item !== specialty));\n  };\n  const handleSave = async () => {\n    // Form validation\n    const validationErrors = {};\n    if (!doctorName) validationErrors.doctorName = \"Doctor's name is required\";\n    if (selectedSpecialties.length === 0) validationErrors.specialties = \"At least one specialty is required\";\n    if (!email) validationErrors.email = \"Email is required\";\n    if (!degree) validationErrors.degree = \"Degree is required\";\n    if (!password && !isEditMode) validationErrors.password = \"Password is required\"; // Password only required in Add mode\n    if (!experience) validationErrors.experience = \"Experience is required\";\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const doctorData = {\n      name: doctorName,\n      specialty: selectedSpecialties,\n      email,\n      degree,\n      password: isEditMode && !password ? undefined : password,\n      // Don't update password if blank in edit mode\n      experience\n    };\n    try {\n      if (isEditMode) {\n        // PUT request for updating an existing doctor\n        await axios.put(`http://localhost:4000/api/doctors/${doctor._id}`, doctorData);\n      } else {\n        // POST request for adding a new doctor\n        await axios.post('http://localhost:4000/api/doctors', doctorData);\n      }\n      onSave(doctorData); // Callback to parent component\n    } catch (error) {\n      console.error(\"Error saving doctor:\", error);\n      // Optionally handle/display specific error messages here\n    }\n  };\n  const handleDiscardChanges = () => {\n    setIsDiscardModalOpen(true);\n  };\n  const handleCloseDiscardModal = () => {\n    setIsDiscardModalOpen(false);\n  };\n  const handleConfirmDiscard = () => {\n    handleCloseDiscardModal();\n    if (onCancel) onCancel();\n    resetForm(); // Reset any changes\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex flex-col bg-white border rounded-lg p-8 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"grid grid-cols-1 gap-4 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"Doctor's Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: `w-full p-2 border rounded-md ${errors.doctorName ? 'border-red-500' : ''}`,\n            placeholder: \"Name\",\n            value: doctorName,\n            onChange: e => setDoctorName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), errors.doctorName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.doctorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"Specialties\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-2\",\n            children: selectedSpecialties.map((specialty, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center bg-indigo-100 text-indigo-700 p-2 rounded-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: specialty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"ml-2 text-red-500 hover:text-red-700\",\n                onClick: () => removeSpecialty(specialty),\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: \"\",\n            onChange: handleSpecialtyChange,\n            className: `w-full p-2 border rounded-md text-gray-400 ${errors.specialties ? 'border-red-500' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), specialtiesOptions.map((specialty, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: specialty.name,\n              children: specialty.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), errors.specialties && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.specialties\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: \"Doctor's Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: `w-full p-2 border rounded-md ${errors.email ? 'border-red-500' : ''}`,\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: \"Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `w-full p-2 border rounded-md ${errors.degree ? 'border-red-500' : ''}`,\n              placeholder: \"Degree\",\n              value: degree,\n              onChange: e => setDegree(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), errors.degree && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.degree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: doctor ? 'Change Password' : 'Set Password'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: `w-full p-2 border rounded-md ${!doctor && errors.password ? 'border-red-500' : ''}`,\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), !doctor && errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block mb-2\",\n              children: \"Experience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `w-full p-2 border rounded-md ${errors.experience ? 'border-red-500' : ''}`,\n              placeholder: \"Experience (e.g., 5 years)\",\n              value: experience,\n              onChange: e => setExperience(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), errors.experience && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-red-500 text-sm mt-1\",\n              children: errors.experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-full\",\n          onClick: handleSave,\n          children: doctor ? 'Save Changes' : 'Add Doctor'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), doctor && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"px-4 py-2 bg-red-500 hover:bg-red-800 text-white rounded-full\",\n          onClick: handleDiscardChanges,\n          children: \"Discard Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), isDiscardModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-md shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"Are you sure you want to discard the unsaved changes?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded-full\",\n            onClick: handleCloseDiscardModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-full\",\n            onClick: handleConfirmDiscard,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(AddDoctorForm, \"QOvM2b9bbCSS1yuC1jUb+uSjYVA=\");\n_c = AddDoctorForm;\nexport default AddDoctorForm;\nvar _c;\n$RefreshReg$(_c, \"AddDoctorForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AddDoctorForm","doctor","onSave","onCancel","isEditMode","_s","doctorName","setDoctorName","selectedSpecialties","setSelectedSpecialties","specialtiesOptions","setSpecialtiesOptions","email","setEmail","degree","setDegree","password","setPassword","experience","setExperience","isDiscardModalOpen","setIsDiscardModalOpen","errors","setErrors","fetchSpecialties","response","get","data","error","console","name","specialty","resetForm","handleSpecialtyChange","event","selectedValue","target","value","includes","removeSpecialty","filter","item","handleSave","validationErrors","length","specialties","Object","keys","doctorData","undefined","put","_id","post","handleDiscardChanges","handleCloseDiscardModal","handleConfirmDiscard","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/AddDoctorForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction AddDoctorForm({ doctor, onSave, onCancel, isEditMode = false }) {\n  const [doctorName, setDoctorName] = useState(\"\");\n  const [selectedSpecialties, setSelectedSpecialties] = useState([]);\n  const [specialtiesOptions, setSpecialtiesOptions] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [degree, setDegree] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [experience, setExperience] = useState(\"\");\n  const [isDiscardModalOpen, setIsDiscardModalOpen] = useState(false);\n  const [errors, setErrors] = useState({}); // State to track form errors\n\n  useEffect(() => {\n    // Fetch the list of specializations from the backend\n    const fetchSpecialties = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/specializations');\n        setSpecialtiesOptions(response.data); // Assuming response.data is an array of specialization names\n      } catch (error) {\n        console.error(\"Error fetching specializations:\", error);\n      }\n    };\n\n    fetchSpecialties();\n\n    if (doctor) {\n      // Load doctor data for edit mode\n      setDoctorName(doctor.name);\n      setSelectedSpecialties(doctor.specialty || []);\n      setEmail(doctor.email || \"\");\n      setDegree(doctor.degree || \"\");\n      setPassword(\"\");\n      setExperience(doctor.experience || \"\");\n    } else {\n      // Reset form for add mode\n      resetForm();\n    }\n  }, [doctor]);\n\n  const resetForm = () => {\n    setDoctorName(\"\");\n    setSelectedSpecialties([]);\n    setEmail(\"\");\n    setDegree(\"\");\n    setPassword(\"\");\n    setExperience(\"\");\n  };\n\n  const handleSpecialtyChange = (event) => {\n    const selectedValue = event.target.value;\n    if (!selectedSpecialties.includes(selectedValue)) {\n      setSelectedSpecialties([...selectedSpecialties, selectedValue]);\n    }\n    event.target.value = \"\"; // Reset dropdown after selection\n  };\n\n  const removeSpecialty = (specialty) => {\n    setSelectedSpecialties(selectedSpecialties.filter((item) => item !== specialty));\n  };\n\n  const handleSave = async () => {\n    // Form validation\n    const validationErrors = {};\n    if (!doctorName) validationErrors.doctorName = \"Doctor's name is required\";\n    if (selectedSpecialties.length === 0) validationErrors.specialties = \"At least one specialty is required\";\n    if (!email) validationErrors.email = \"Email is required\";\n    if (!degree) validationErrors.degree = \"Degree is required\";\n    if (!password && !isEditMode) validationErrors.password = \"Password is required\"; // Password only required in Add mode\n    if (!experience) validationErrors.experience = \"Experience is required\";\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    const doctorData = {\n      name: doctorName,\n      specialty: selectedSpecialties,\n      email,\n      degree,\n      password: isEditMode && !password ? undefined : password, // Don't update password if blank in edit mode\n      experience,\n    };\n\n    try {\n      if (isEditMode) {\n        // PUT request for updating an existing doctor\n        await axios.put(`http://localhost:4000/api/doctors/${doctor._id}`, doctorData);\n      } else {\n        // POST request for adding a new doctor\n        await axios.post('http://localhost:4000/api/doctors', doctorData);\n      }\n      onSave(doctorData); // Callback to parent component\n    } catch (error) {\n      console.error(\"Error saving doctor:\", error);\n      // Optionally handle/display specific error messages here\n    }\n  };\n\n  const handleDiscardChanges = () => {\n    setIsDiscardModalOpen(true);\n  };\n\n  const handleCloseDiscardModal = () => {\n    setIsDiscardModalOpen(false);\n  };\n\n  const handleConfirmDiscard = () => {\n    handleCloseDiscardModal();\n    if (onCancel) onCancel();\n    resetForm(); // Reset any changes\n  };\n\n  return (\n    <>\n      <section className=\"flex flex-col bg-white border rounded-lg p-8 w-full\">\n        <form className=\"grid grid-cols-1 gap-4 mb-6\">\n          <div>\n            <label className=\"block mb-2\">Doctor's Name</label>\n            <input\n              type=\"text\"\n              className={`w-full p-2 border rounded-md ${errors.doctorName ? 'border-red-500' : ''}`}\n              placeholder=\"Name\"\n              value={doctorName}\n              onChange={(e) => setDoctorName(e.target.value)}\n            />\n            {errors.doctorName && <p className=\"text-red-500 text-sm mt-1\">{errors.doctorName}</p>}\n          </div>\n\n          <div>\n            <label className=\"block mb-2\">Specialties</label>\n            <div className=\"flex flex-wrap gap-2 mb-2\">\n              {selectedSpecialties.map((specialty, index) => (\n                <div key={index} className=\"flex items-center bg-indigo-100 text-indigo-700 p-2 rounded-full\">\n                  <span>{specialty}</span>\n                  <button\n                    type=\"button\"\n                    className=\"ml-2 text-red-500 hover:text-red-700\"\n                    onClick={() => removeSpecialty(specialty)}\n                  >\n                    &#x2715;\n                  </button>\n                </div>\n              ))}\n            </div>\n            <select\n              value=\"\"\n              onChange={handleSpecialtyChange}\n              className={`w-full p-2 border rounded-md text-gray-400 ${errors.specialties ? 'border-red-500' : ''}`}\n            >\n              <option value=\"\" disabled>Select Specialization</option>\n              {specialtiesOptions.map((specialty, index) => (\n                <option key={index} value={specialty.name}>\n                  {specialty.name}\n                </option>\n              ))}\n            </select>\n            {errors.specialties && <p className=\"text-red-500 text-sm mt-1\">{errors.specialties}</p>}\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block mb-2\">Doctor's Email</label>\n              <input\n                type=\"email\"\n                className={`w-full p-2 border rounded-md ${errors.email ? 'border-red-500' : ''}`}\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email}</p>}\n            </div>\n\n            <div>\n              <label className=\"block mb-2\">Degree</label>\n              <input\n                type=\"text\"\n                className={`w-full p-2 border rounded-md ${errors.degree ? 'border-red-500' : ''}`}\n                placeholder=\"Degree\"\n                value={degree}\n                onChange={(e) => setDegree(e.target.value)}\n              />\n              {errors.degree && <p className=\"text-red-500 text-sm mt-1\">{errors.degree}</p>}\n            </div>\n\n            <div>\n              <label className=\"block mb-2\">{doctor ? 'Change Password' : 'Set Password'}</label>\n              <input\n                type=\"password\"\n                className={`w-full p-2 border rounded-md ${!doctor && errors.password ? 'border-red-500' : ''}`}\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              {!doctor && errors.password && <p className=\"text-red-500 text-sm mt-1\">{errors.password}</p>}\n            </div>\n\n            <div>\n              <label className=\"block mb-2\">Experience</label>\n              <input\n                type=\"text\"\n                className={`w-full p-2 border rounded-md ${errors.experience ? 'border-red-500' : ''}`}\n                placeholder=\"Experience (e.g., 5 years)\"\n                value={experience}\n                onChange={(e) => setExperience(e.target.value)}\n              />\n              {errors.experience && <p className=\"text-red-500 text-sm mt-1\">{errors.experience}</p>}\n            </div>\n          </div>\n        </form>\n        \n        <div className=\"flex gap-3\">\n          <button\n            type=\"button\"\n            className=\"px-4 py-2 bg-indigo-500 hover:bg-indigo-600 text-white rounded-full\"\n            onClick={handleSave}\n          >\n            {doctor ? 'Save Changes' : 'Add Doctor'}\n          </button>\n          {doctor && (\n            <button\n              type=\"button\"\n              className=\"px-4 py-2 bg-red-500 hover:bg-red-800 text-white rounded-full\"\n              onClick={handleDiscardChanges}\n            >\n              Discard Changes\n            </button>\n          )}\n        </div>\n      </section>\n\n      {isDiscardModalOpen && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50\">\n          <div className=\"bg-white p-6 rounded-md shadow-lg\">\n            <p className=\"mb-4\">Are you sure you want to discard the unsaved changes?</p>\n            <div className=\"flex justify-end gap-2\">\n              <button\n                className=\"px-4 py-2 bg-gray-300 hover:bg-gray-400 rounded-full\"\n                onClick={handleCloseDiscardModal}\n              >\n                Close\n              </button>\n              <button\n                className=\"px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-full\"\n                onClick={handleConfirmDiscard}\n              >\n                Confirm\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default AddDoctorForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}