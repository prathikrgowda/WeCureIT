{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoctorGrid from './DoctorGrid';\nimport AddDoctorForm from './AddDoctorForm'; // Keep this for adding new doctors\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; // Modal for editing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageDoctors() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const handleEdit = doctor => {\n    setSelectedDoctor(doctor); // Set the doctor to be edited\n    setIsModalOpen(true); // Open the modal for editing\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null); // Reset the doctor\n  };\n  const handleSaveDoctor = updatedDoctor => {\n    console.log('Updated doctor:', updatedDoctor);\n    // Here you would handle the saving of the updated doctor to the state or backend\n    setIsModalOpen(false); // Close the modal after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 px-8 py-4 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[700px] max-w-[1000px]\",\n            children: /*#__PURE__*/_jsxDEV(AddDoctorForm, {\n              onSave: newDoctor => console.log('Added doctor:', newDoctor)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[900px] max-w-[1200px]\",\n            children: /*#__PURE__*/_jsxDEV(DoctorGrid, {\n              onEdit: handleEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(AddDoctorForm, {\n        doctor: selectedDoctor,\n        onSave: handleSaveDoctor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageDoctors, \"d8zI3e9PePTLed/A79Sg+7IbMfI=\");\n_c = ManageDoctors;\nexport default ManageDoctors;\nvar _c;\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"names":["React","useState","DoctorGrid","AddDoctorForm","Header","Sidebar","Modal","jsxDEV","_jsxDEV","ManageDoctors","_s","isModalOpen","setIsModalOpen","selectedDoctor","setSelectedDoctor","handleEdit","doctor","handleCloseModal","handleSaveDoctor","updatedDoctor","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","newDoctor","onEdit","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport DoctorGrid from './DoctorGrid';\nimport AddDoctorForm from './AddDoctorForm'; // Keep this for adding new doctors\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; // Modal for editing\n\nfunction ManageDoctors() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n\n  const handleEdit = (doctor) => {\n    setSelectedDoctor(doctor); // Set the doctor to be edited\n    setIsModalOpen(true); // Open the modal for editing\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null); // Reset the doctor\n  };\n\n  const handleSaveDoctor = (updatedDoctor) => {\n    console.log('Updated doctor:', updatedDoctor);\n    // Here you would handle the saving of the updated doctor to the state or backend\n    setIsModalOpen(false); // Close the modal after saving\n  };\n\n  return (\n    <div className=\"flex-1 flex flex-col min-h-screen\">\n      <Header />\n      <div className=\"flex w-full min-h-screen bg-gray-50\">\n        <Sidebar className=\"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\" />\n        <main className=\"flex-1 px-8 py-4 w-full\">\n          <div className=\"flex flex-col gap-6\">\n            <div className=\"min-w-[700px] max-w-[1000px]\"> \n              {/* This is for adding a new doctor */}\n              <AddDoctorForm onSave={(newDoctor) => console.log('Added doctor:', newDoctor)} />\n            </div>\n\n            <div className=\"min-w-[900px] max-w-[1200px]\">\n              {/* Doctor grid, pass handleEdit to open edit modal */}\n              <DoctorGrid onEdit={handleEdit} />\n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modal for editing a doctor */}\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n          <AddDoctorForm doctor={selectedDoctor} onSave={handleSaveDoctor} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default ManageDoctors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}