{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/ManageDoctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport Modal from '../components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageDoctors() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [shouldRefreshGrid, setShouldRefreshGrid] = useState(false); // For triggering grid refresh\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);\n  };\n\n  // Function to open the modal for adding a new doctor\n  const handleAddDoctor = () => {\n    setSelectedDoctor(null); // Clear selected doctor for adding\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null);\n  };\n\n  // Function to save the doctor data\n  const handleSaveDoctor = doctorData => {\n    if (!selectedDoctor) {\n      setShouldRefreshGrid(true); // Set to true for adding new doctor\n    }\n    handleCloseModal();\n  };\n\n  // Function to reset the grid refresh state after update\n  const resetGridRefresh = () => setShouldRefreshGrid(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 px-8 py-4 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: /*#__PURE__*/_jsxDEV(DoctorGrid, {\n            onEdit: handleEditDoctor,\n            shouldRefresh: shouldRefreshGrid,\n            onRefreshComplete: resetGridRefresh\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(AddDoctorForm, {\n        doctor: selectedDoctor,\n        onSave: handleSaveDoctor,\n        onCancel: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageDoctors, \"4QIz1F4YabO+5dhoREslJ26Ruxc=\");\n_c = ManageDoctors;\nexport default ManageDoctors;\nvar _c;\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"names":["React","useState","AddDoctorForm","DoctorGrid","Header","Sidebar","Modal","jsxDEV","_jsxDEV","ManageDoctors","_s","isModalOpen","setIsModalOpen","selectedDoctor","setSelectedDoctor","shouldRefreshGrid","setShouldRefreshGrid","handleEditDoctor","doctor","handleAddDoctor","handleCloseModal","handleSaveDoctor","doctorData","resetGridRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","shouldRefresh","onRefreshComplete","isOpen","onClose","onSave","onCancel","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/doctorsAdminMode/ManageDoctors.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport Modal from '../components/Modal';\n\nfunction ManageDoctors() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null); \n  const [shouldRefreshGrid, setShouldRefreshGrid] = useState(false); // For triggering grid refresh\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true); \n  };\n\n  // Function to open the modal for adding a new doctor\n  const handleAddDoctor = () => {\n    setSelectedDoctor(null); // Clear selected doctor for adding\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false); \n    setSelectedDoctor(null); \n  };\n\n  // Function to save the doctor data\n  const handleSaveDoctor = (doctorData) => {\n    if (!selectedDoctor) {\n      setShouldRefreshGrid(true); // Set to true for adding new doctor\n    }\n    handleCloseModal();\n  };\n\n  // Function to reset the grid refresh state after update\n  const resetGridRefresh = () => setShouldRefreshGrid(false);\n\n  return (\n    <div className=\"flex-1 flex flex-col min-h-screen\">\n      <Header />\n      <div className=\"flex w-full min-h-screen bg-gray-50\">\n        <Sidebar className=\"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\" />\n        <main className=\"flex-1 px-8 py-4 w-full\">\n          <div className=\"flex flex-col gap-2\">\n            <DoctorGrid \n              onEdit={handleEditDoctor} \n              shouldRefresh={shouldRefreshGrid} \n              onRefreshComplete={resetGridRefresh} \n            />\n          </div>\n        </main>\n      </div>\n\n      {/* Modal for AddDoctorForm */}\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        <AddDoctorForm\n          doctor={selectedDoctor} \n          onSave={handleSaveDoctor}\n          onCancel={handleCloseModal} \n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default ManageDoctors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}