{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/facilitiesAdminMode/ManageFacilities.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport AddFacilityForm from './AddFacilityForm';\nimport FacilityGrid from './FacilityGrid';\nimport Modal from '../components/Modal'; // Import the Modal component\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageFacilities() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedFacility, setSelectedFacility] = useState(null);\n  const [facilities, setFacilities] = useState([]); // Lifted state\n\n  // Fetch facilities from the backend\n  const fetchFacilities = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/facilities');\n      setFacilities(response.data);\n    } catch (error) {\n      console.error(\"Error fetching facilities:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchFacilities(); // Fetch facilities on component mount\n  }, []);\n\n  // Function to open the modal and pass selected facility data\n  const handleEditFacility = facility => {\n    setSelectedFacility(facility);\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedFacility(null);\n  };\n\n  // Function to handle save success when adding a facility\n  const handleAddFacilitySuccess = () => {\n    fetchFacilities(); // Refresh the facilities list\n  };\n\n  // Function to handle save success when editing a facility\n  const handleEditSaveSuccess = () => {\n    handleCloseModal();\n    fetchFacilities(); // Refresh the facilities list\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 px-8 py-4 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(AddFacilityForm, {\n            onSaveSuccess: handleAddFacilitySuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FacilityGrid, {\n            facilities: facilities,\n            onEdit: handleEditFacility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(AddFacilityForm, {\n        facility: selectedFacility,\n        onCancel: handleCloseModal,\n        onSaveSuccess: handleEditSaveSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageFacilities, \"MTlk0GFGuN7/VzaZF33XUQmV35Q=\");\n_c = ManageFacilities;\nexport default ManageFacilities;\nvar _c;\n$RefreshReg$(_c, \"ManageFacilities\");","map":{"version":3,"names":["React","useState","useEffect","Header","Sidebar","AddFacilityForm","FacilityGrid","Modal","axios","jsxDEV","_jsxDEV","ManageFacilities","_s","isModalOpen","setIsModalOpen","selectedFacility","setSelectedFacility","facilities","setFacilities","fetchFacilities","response","get","data","error","console","handleEditFacility","facility","handleCloseModal","handleAddFacilitySuccess","handleEditSaveSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveSuccess","onEdit","isOpen","onClose","onCancel","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/CBES-WeCureIt/frontend/src/facilitiesAdminMode/ManageFacilities.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport AddFacilityForm from './AddFacilityForm';\nimport FacilityGrid from './FacilityGrid';\nimport Modal from '../components/Modal'; // Import the Modal component\nimport axios from 'axios';\n\nfunction ManageFacilities() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedFacility, setSelectedFacility] = useState(null);\n  const [facilities, setFacilities] = useState([]); // Lifted state\n\n  // Fetch facilities from the backend\n  const fetchFacilities = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/facilities');\n      setFacilities(response.data);\n    } catch (error) {\n      console.error(\"Error fetching facilities:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchFacilities(); // Fetch facilities on component mount\n  }, []);\n\n  // Function to open the modal and pass selected facility data\n  const handleEditFacility = (facility) => {\n    setSelectedFacility(facility);\n    setIsModalOpen(true);\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedFacility(null);\n  };\n\n  // Function to handle save success when adding a facility\n  const handleAddFacilitySuccess = () => {\n    fetchFacilities(); // Refresh the facilities list\n  };\n\n  // Function to handle save success when editing a facility\n  const handleEditSaveSuccess = () => {\n    handleCloseModal();\n    fetchFacilities(); // Refresh the facilities list\n  };\n\n  return (\n    <div className=\"flex-1 flex flex-col min-h-screen\">\n      <Header />\n      <div className=\"flex w-full min-h-screen bg-gray-50\">\n        <Sidebar />\n        <main className=\"flex-1 px-8 py-4 w-full\">\n          {/* Form and Facilities Grid */}\n          <div className=\"flex flex-col gap-6\">\n            {/* Add Facility Form */}\n            <AddFacilityForm onSaveSuccess={handleAddFacilitySuccess} />\n            {/* Facilities Grid */}\n            <FacilityGrid\n              facilities={facilities}\n              onEdit={handleEditFacility}\n            />\n          </div>\n        </main>\n      </div>\n\n      {/* Modal to show the AddFacilityForm with pre-filled data for editing */}\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        <AddFacilityForm\n          facility={selectedFacility}\n          onCancel={handleCloseModal}\n          onSaveSuccess={handleEditSaveSuccess}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default ManageFacilities;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}