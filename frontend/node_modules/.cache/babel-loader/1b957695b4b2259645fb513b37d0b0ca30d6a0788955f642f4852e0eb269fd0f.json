{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; // Assuming you have a Modal component for pop-up\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageDoctors() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null); // Stores the doctor being edited\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor); // Set the doctor to be edited\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // Close the modal\n    setSelectedDoctor(null); // Reset the selected doctor\n  };\n\n  // Function to save the doctor data (for both adding and editing)\n  const handleSaveDoctor = doctorData => {\n    if (selectedDoctor) {\n      // Handle the case for editing an existing doctor\n      console.log('Edited Doctor:', doctorData);\n      // Perform any necessary updates to your data or state\n    } else {\n      // Handle the case for adding a new doctor\n      console.log('New Doctor:', doctorData);\n      // Perform any necessary additions to your data or state\n    }\n    handleCloseModal(); // Close the modal after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 px-8 py-4 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[700px] max-w-[1000px]\",\n            children: [/*#__PURE__*/_jsxDEV(AddDoctorForm, {\n              onSave: handleSaveDoctor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[900px] max-w-[1200px]\",\n            children: [/*#__PURE__*/_jsxDEV(DoctorGrid, {\n              onEdit: handleEditDoctor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      children: selectedDoctor && /*#__PURE__*/_jsxDEV(AddDoctorForm, {\n        doctor: selectedDoctor // Pass the selected doctor to edit\n        ,\n        onSave: handleSaveDoctor,\n        isEditMode: true // Pass isEditMode as true for the pop-up form\n        ,\n        onClose: handleCloseModal // Handle closing without saving\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageDoctors, \"d8zI3e9PePTLed/A79Sg+7IbMfI=\");\n_c = ManageDoctors;\nexport default ManageDoctors;\nvar _c;\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"names":["React","useState","AddDoctorForm","DoctorGrid","Header","Sidebar","Modal","jsxDEV","_jsxDEV","ManageDoctors","_s","isModalOpen","setIsModalOpen","selectedDoctor","setSelectedDoctor","handleEditDoctor","doctor","handleCloseModal","handleSaveDoctor","doctorData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSave","onEdit","isOpen","onClose","isEditMode","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; // Assuming you have a Modal component for pop-up\n\nfunction ManageDoctors() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDoctor, setSelectedDoctor] = useState(null); // Stores the doctor being edited\n\n  // Function to open the modal for editing a doctor\n  const handleEditDoctor = (doctor) => {\n    setSelectedDoctor(doctor); // Set the doctor to be edited\n    setIsModalOpen(true); // Open the modal\n  };\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false); // Close the modal\n    setSelectedDoctor(null); // Reset the selected doctor\n  };\n\n  // Function to save the doctor data (for both adding and editing)\n  const handleSaveDoctor = (doctorData) => {\n    if (selectedDoctor) {\n      // Handle the case for editing an existing doctor\n      console.log('Edited Doctor:', doctorData);\n      // Perform any necessary updates to your data or state\n    } else {\n      // Handle the case for adding a new doctor\n      console.log('New Doctor:', doctorData);\n      // Perform any necessary additions to your data or state\n    }\n    handleCloseModal(); // Close the modal after saving\n  };\n\n  return (\n    <div className=\"flex-1 flex flex-col min-h-screen\">\n      <Header />\n      <div className=\"flex w-full min-h-screen bg-gray-50\">\n        {/* Add responsive width to Sidebar */}\n        <Sidebar className=\"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\" />\n        <main className=\"flex-1 px-8 py-4 w-full\">\n          {/* Container for the form and grid */}\n          <div className=\"flex flex-col gap-2\">\n            {/* Add Doctor Form for adding new doctors */}\n            <div className=\"min-w-[700px] max-w-[1000px]\">\n              <AddDoctorForm onSave={handleSaveDoctor} /> {/* For adding a new doctor */}\n            </div>\n\n            {/* Doctor Grid with edit functionality */}\n            <div className=\"min-w-[900px] max-w-[1200px]\">\n              <DoctorGrid onEdit={handleEditDoctor} /> {/* Pass the handleEditDoctor function */}\n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modal to show the AddDoctorForm for editing */}\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        {selectedDoctor && (\n          <AddDoctorForm\n            doctor={selectedDoctor} // Pass the selected doctor to edit\n            onSave={handleSaveDoctor}\n            isEditMode={true} // Pass isEditMode as true for the pop-up form\n            onClose={handleCloseModal} // Handle closing without saving\n          />\n        )}\n      </Modal>\n    </div>\n  );\n}\n\nexport default ManageDoctors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}