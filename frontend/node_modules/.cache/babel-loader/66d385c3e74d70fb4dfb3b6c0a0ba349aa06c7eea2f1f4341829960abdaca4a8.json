{"ast":null,"code":"var _jsxFileName = \"/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; // Import a modal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageDoctors() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false); // Track if the modal is open\n  const [selectedDoctor, setSelectedDoctor] = useState(null); // Track the doctor selected for editing\n\n  // Handle opening the modal and passing the selected doctor\n  const handleEditDoctor = doctor => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true); // Open the modal when a doctor is selected for editing\n  };\n\n  // Handle closing the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null); // Clear the selected doctor when the modal is closed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        className: \"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 px-8 py-4 w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[700px] max-w-[1000px]\",\n            children: /*#__PURE__*/_jsxDEV(AddDoctorForm, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-w-[900px] max-w-[1200px]\",\n            children: /*#__PURE__*/_jsxDEV(DoctorGrid, {\n              onEdit: handleEditDoctor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(AddDoctorForm, {\n        doctor: selectedDoctor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageDoctors, \"d8zI3e9PePTLed/A79Sg+7IbMfI=\");\n_c = ManageDoctors;\nexport default ManageDoctors;\nvar _c;\n$RefreshReg$(_c, \"ManageDoctors\");","map":{"version":3,"names":["React","useState","AddDoctorForm","DoctorGrid","Header","Sidebar","Modal","jsxDEV","_jsxDEV","ManageDoctors","_s","isModalOpen","setIsModalOpen","selectedDoctor","setSelectedDoctor","handleEditDoctor","doctor","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onClose","_c","$RefreshReg$"],"sources":["/Users/prathikranganathagowda/Desktop/testingfrontend/src/ManageDoctors.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport AddDoctorForm from './AddDoctorForm';\nimport DoctorGrid from './DoctorGrid';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal'; // Import a modal component\n\nfunction ManageDoctors() {\n  const [isModalOpen, setIsModalOpen] = useState(false);  // Track if the modal is open\n  const [selectedDoctor, setSelectedDoctor] = useState(null);  // Track the doctor selected for editing\n\n  // Handle opening the modal and passing the selected doctor\n  const handleEditDoctor = (doctor) => {\n    setSelectedDoctor(doctor);\n    setIsModalOpen(true);  // Open the modal when a doctor is selected for editing\n  };\n\n  // Handle closing the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedDoctor(null);  // Clear the selected doctor when the modal is closed\n  };\n\n  return (\n    <div className=\"flex-1 flex flex-col min-h-screen\">\n      <Header />\n      <div className=\"flex w-full min-h-screen bg-gray-50\">\n        {/* Add responsive width to Sidebar */}\n        <Sidebar className=\"w-[289px] max-w-[289px] max-md:w-[200px] min-w-[150px]\" />\n        <main className=\"flex-1 px-8 py-4 w-full\">\n          {/* Container for the form and grid */}\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"min-w-[700px] max-w-[1000px]\">\n              {/* This is the form for adding new doctors, always visible */}\n              <AddDoctorForm />\n            </div>\n            <div className=\"min-w-[900px] max-w-[1200px]\">\n              {/* Pass the handleEditDoctor function to DoctorGrid */}\n              <DoctorGrid onEdit={handleEditDoctor} />\n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modal pop-up for editing a doctor */}\n      {isModalOpen && (\n        <Modal onClose={handleCloseModal}>\n          <AddDoctorForm doctor={selectedDoctor} />  {/* Pass the selected doctor to the form */}\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default ManageDoctors;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}